{"version":3,"sources":["routes/Coin.tsx","api.ts","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["Container","styled","div","_templateObject","Object","taggedTemplateLiteral","Header","header","_templateObject2","Title","h1","_templateObject3","props","theme","accentColor","BackBtn","_templateObject4","desColor","Loader","_templateObject5","tabColor","CoinInfo","_templateObject6","textColor","CoinInfoDetails","_templateObject7","Description","p","_templateObject8","Tabs","img","_templateObject9","_templateObject10","Tab","span","_templateObject11","isActive","Coin","coinId","useParams","state","useLocation","priceMatch","useMatch","chartMatch","_useState","useState","_useState2","slicedToArray","loading","setLoading","_useState3","_useState4","info","setInfo","_useState5","_useState6","priceInfo","setPriceInfo","useEffect","asyncToGenerator","_regeneratorRuntime","mark","_callee","infoData","priceData","wrap","_context","prev","next","fetch","concat","sent","json","stop","react_default","a","createElement","Helmet","name","react_router_dom","to","index_esm","size","Fragment","description","rank","symbol","quotes","USD","price","toFixed","circulating_supply","max_supply","open_source","react_router","context","BASE_URL","CHART_URL","fetchCoins","then","response","fetchCoinHistory","Coins_templateObject","Coins_templateObject2","CoinsList","ul","Coins_templateObject3","li","Coins_templateObject4","Coins_templateObject5","Coins_templateObject6","Img","Coins_templateObject7","Toggle","Coins_templateObject8","ToggleBtn","Coins_templateObject9","Coins","_useQuery","useQuery","isLoading","data","isLight","useRecoilValue","isLightAtom","setlightAtom","useSetRecoilState","togglelightAtom","prevMode","Coins_Container","Coins_Header","Coins_Title","onClick","bs_index_esm","color","Coins_Loader","slice","map","coin","Coins_Coin","key","id","Coins_Img","src","toLowerCase","PriceDetailUl","Router_templateObject","PriceDetailLi","Router_templateObject2","Chart","useOutletContext","refetchInterval","historyLoading","chartData","react_apexcharts_min_default","type","series","x","Date","time_open","y","parseFloat","open","high","low","close","options","chart","height","width","toolbar","show","background","grid","yaxis","xaxis","labels","axisTicks","axisBorder","plotOptions","candlestick","colors","upward","downward","tooltip","formatter","value","Price","_useQuery2","Router_regeneratorRuntime","ath_price","market_cap","percent_from_price_ath","volume_24h","Router","basename","process","path","element","routes_Coins","routes_Coin","darkTheme","bgColor","lightTheme","GlobalStyle","createGlobalStyle","App_templateObject","atom","default","App","toggle","styled_components_browser_esm","src_Router","umd_index_production","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","es","index_production","client","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d4fcb531.chunk.js","sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\nimport { Helmet } from \"react-helmet\";\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { useParams, Outlet, Link, useMatch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { BiArrowBack } from \"react-icons/bi\";\n// import { fetchCoinInfo, fetchCoinTickers } from \"../api\";\n\nconst Container = styled.div`\n  padding: 0 20px;\n  max-width: 480px;\n  margin: 0 auto;\n  margin-bottom: 30px;\n`;\n\nconst Header = styled.header`\n  position: relative;\n  margin-top: 30px;\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-item: center;\n`;\n\nconst Title = styled.h1`\n  padding: 10px;\n  font-size: 48px;\n  text-align: center;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst BackBtn = styled.div`\n  position: absolute;\n  left: 10px;\n  top: 15px;\n  width: 50px;\n  height: 50px;\n  color: ${(props) => props.theme.desColor};\n`;\n\nconst Loader = styled.div`\n  text-align: center;\n  font-size: 40px;\n  color: ${(props) => props.theme.tabColor};\n`;\n\nconst CoinInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: ${(props) => props.theme.tabColor};\n  color: ${(props) => props.theme.textColor};\n  padding: 15px 20px;\n  border-radius: 10px;\n  margin-bottom: 20px;\n`;\n\nconst CoinInfoDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\n\nconst Description = styled.p`\n  color: ${(props) => props.theme.desColor};\n  margin-bottom: 25px;\n  font-size: 18px;\n  line-height: 1.5;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: ${(props) => props.theme.tabColor};\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    padding: 7px 0px;\n    display: block;\n  }\n`;\n\ninterface NameState {\n  name: string;\n}\n\ninterface RouteState {\n  state: NameState;\n}\n\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Coin() {\n  const { coinId } = useParams();\n  const { state } = useLocation() as RouteState;\n  const priceMatch = useMatch(\"/:coinId/price\");\n  const chartMatch = useMatch(\"/:coinId/chart\");\n  // const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n  //   [\"info\", coinId],\n  //   () => fetchCoinInfo(coinId!)\n  // );\n  // const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n  //   [\"tickers\", coinId],\n  //   () => fetchCoinTickers(coinId!)\n  // );\n  // const loading = infoLoading || tickersLoading;\n  const [loading, setLoading] = useState(true);\n  const [info, setInfo] = useState<InfoData>();\n  const [priceInfo, setPriceInfo] = useState<PriceData>();\n  useEffect(() => {\n    (async () => {\n      const infoData = await (\n        await fetch(`https://api.coinpaprika.com/v1/coins/${coinId}`)\n      ).json();\n      const priceData = await (\n        await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)\n      ).json();\n      setInfo(infoData);\n      setPriceInfo(priceData);\n      setLoading(false);\n    })();\n  }, []);\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state ? (\n            state.name\n          ) : loading ? (\n            <Loader>\"Loading...\"</Loader>\n          ) : info ? (\n            info.name\n          ) : null}\n        </title>\n      </Helmet>\n      <Header>\n        <Link to={\"/\"}>\n          <BackBtn>\n            <BiArrowBack size=\"20\" />\n          </BackBtn>\n        </Link>\n        <Title>\n          {state\n            ? state.name\n            : loading\n            ? \"Loading...\"\n            : info\n            ? info.name\n            : null}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Description>{info ? info.description : null}</Description>\n          <CoinInfo>\n            <CoinInfoDetails>\n              <span>Rank: </span>\n              <span>{info ? info.rank : \"\"}</span>\n            </CoinInfoDetails>\n            <CoinInfoDetails>\n              <span>Symbol: </span>\n              <span>{info ? info.symbol : \"not found\"}</span>\n            </CoinInfoDetails>\n            <CoinInfoDetails>\n              <span>Price: </span>\n              <span>\n                {priceInfo ? priceInfo.quotes.USD.price.toFixed(2) : null}\n              </span>\n            </CoinInfoDetails>\n          </CoinInfo>\n          <CoinInfo>\n            <CoinInfoDetails>\n              <span>Circulating Supply: </span>\n              <span>\n                {priceInfo ? priceInfo.circulating_supply : \"not found\"}\n              </span>\n            </CoinInfoDetails>\n            <CoinInfoDetails>\n              <span>Max Supply: </span>\n              <span>{priceInfo ? priceInfo.max_supply : \"not found\"}</span>\n            </CoinInfoDetails>\n            <CoinInfoDetails>\n              <span>Open Source: </span>\n              <span>{info ? (info.open_source ? \"Yes\" : \"No\") : null}</span>\n            </CoinInfoDetails>\n          </CoinInfo>\n        </>\n      )}\n      <Tabs>\n        <Tab isActive={chartMatch !== null}>\n          <Link to={`/${coinId}/chart`}>Chart</Link>\n        </Tab>\n        <Tab isActive={priceMatch !== null}>\n          <Link to={`/${coinId}/price`}>Price</Link>\n        </Tab>\n      </Tabs>\n      <Outlet context={{ coinId }} />\n    </Container>\n  );\n}\n\nexport default Coin;\n","const BASE_URL = `https://api.coinpaprika.com/v1`;\nconst CHART_URL = `https://ohlcv-api.nomadcoders.workers.dev`;\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  //   const endDate = Math.floor(Date.now() / 1000);\n  //   const startDate = endDate - 60 * 60 * 24 * 7;\n  return fetch(`${`${CHART_URL}?coinId=${coinId}`}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}}`).then((response) =>\n    response.json()\n  );\n}\n\n// export function fetchCoins() {\n//   return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n// }\n// export function fetchCoinInfo(coinId: string) {\n//   return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n//     response.json()\n//   );\n// }\n// export function fetchCoinTickers(coinId: string) {\n//   return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n//     response.json()\n//   );\n// }\n","import styled from \"styled-components\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { fetchCoins } from \"../api\";\nimport { Helmet } from \"react-helmet\";\nimport { isLightAtom } from \"../App\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { BsMoonStarsFill } from \"react-icons/bs\";\nimport { BsFillSunFill } from \"react-icons/bs\";\n\nconst Container = styled.div`\n  padding: 0 20px;\n  max-width: 480px;\n  margin: 0 auto;\n  margin-bottom: 30px;\n`;\n\nconst Header = styled.header`\n  margin-top: 30px;\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-item: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: ${(props) => props.theme.tabColor};\n  color: ${(props) => props.theme.textColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    display: flex;\n    align-items: center;\n    transition: color 0.2s ease-in;\n    padding: 20px;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.div`\n  text-align: center;\n  font-size: 40px;\n  color: ${(props) => props.theme.tabColor};\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nexport const Toggle = styled.div`\n  position: fixed;\n  top: 30px;\n  left: 30px;\n`;\n\nexport const ToggleBtn = styled.div`\n  width: 50px;\n  height: 50px;\n`;\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>([\"allCoins\"], fetchCoins);\n  const isLight = useRecoilValue(isLightAtom);\n  const setlightAtom = useSetRecoilState(isLightAtom);\n  const togglelightAtom = () => setlightAtom((prevMode) => !prevMode);\n  // const [coins, setcoins] = useState<ICoin[]>([]);\n  // const [loading, setLoading] = useState(true);\n  // useEffect(() => {\n  //   (async () => {\n  //     const response = await fetch(\"https://api.coinpaprika.com/v1/coins\");\n  //     const json = await response.json();\n  //     setcoins(json.slice(0, 100));\n  //     setLoading(false);\n  //   })();\n  // }, []);\n  return (\n    <Container>\n      <Helmet>\n        <title>Coins</title>\n      </Helmet>\n      <Header>\n        <Title>Coins</Title>\n      </Header>\n      <Toggle>\n        {isLight ? (\n          <ToggleBtn onClick={togglelightAtom}>\n            <Link to={\"/\"}>\n              <BsMoonStarsFill size={\"30px\"} color={\"#1C1A27\"} />\n            </Link>\n          </ToggleBtn>\n        ) : (\n          <ToggleBtn onClick={togglelightAtom}>\n            <Link to={\"/\"}>\n              <BsFillSunFill size={\"30px\"} color={\"#ffcb00\"} />\n            </Link>\n          </ToggleBtn>\n        )}\n      </Toggle>\n      {isLoading ? (\n        <Loader>\"Loading...\"</Loader>\n      ) : (\n        <CoinsList>\n          {data\n            ? data.slice(0, 100).map((coin) => (\n                <Coin key={coin.id}>\n                  <Link to={`/${coin.id}`} state={{ name: coin.name }}>\n                    <Img\n                      src={`https://coinicons-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                    />\n                    {coin.name} &rarr;\n                  </Link>\n                </Coin>\n              ))\n            : true}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;\n","import { BrowserRouter, Routes, Route, useParams } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\nimport { useOutletContext } from \"react-router-dom\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { fetchCoinHistory } from \"./api\";\nimport ReactApexChart from \"react-apexcharts\";\nimport styled from \"styled-components\";\nimport { BsCoin } from \"react-icons/bs\";\n\nfunction Router() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Routes>\n        <Route path=\"/\" element={<Coins />}></Route>\n        <Route path=\"/:coinId\" element={<Coin />}>\n          <Route path=\"chart\" element={<Chart />}></Route>\n          <Route path=\"price\" element={<Price />}></Route>\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nconst PriceDetailUl = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n  color: ${(props) => props.theme.desColor};\n  font-size: 18px;\n`;\n\nconst PriceDetailLi = styled.div`\n  display: flex;\n  gap: 10px;\n  flex-direction: row;\n  padding-left: 60px;\n  align-items: center;\n`;\n\ninterface CharProps {\n  coinId: string;\n}\n\ninterface IDate {\n  // time_open: string;\n  // time_close: string;\n  // open: number;\n  // high: number;\n  // low: number;\n  // close: number;\n  // volume: number;\n  // market_cap: number;\n  time_open: number;\n  time_close: number;\n  open: string;\n  high: string;\n  low: string;\n  close: string;\n  volume: string;\n  market_cap: number;\n}\n\ninterface ChartItem {\n  x: Date;\n  y: number[];\n}\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Chart() {\n  // const params = useParams();\n  // console.log(params);\n  const { coinId } = useOutletContext<CharProps>();\n  const { isLoading: historyLoading, data: chartData } = useQuery<IDate[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n  return (\n    <div>\n      {historyLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ReactApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              name: \"Price\",\n              data: chartData!.map((props) => {\n                return {\n                  x: new Date(props.time_open * 1000),\n                  y: [\n                    parseFloat(props.open),\n                    parseFloat(props.high),\n                    parseFloat(props.low),\n                    parseFloat(props.close),\n                  ],\n                };\n              }) as ChartItem[],\n            },\n          ]}\n          options={{\n            chart: {\n              height: 300,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n              background: \"transparent\",\n            },\n            grid: {\n              show: false,\n            },\n            yaxis: {\n              show: false,\n            },\n            xaxis: {\n              labels: {\n                show: false,\n              },\n              axisTicks: {\n                show: false,\n              },\n              axisBorder: {\n                show: false,\n              },\n              type: \"datetime\",\n            },\n            plotOptions: {\n              candlestick: {\n                colors: {\n                  upward: \"#EB1D36\",\n                  downward: \"#3330E4\",\n                },\n              },\n            },\n            tooltip: {\n              y: {\n                formatter: (value) => `$${value.toFixed(2)}`,\n              },\n            },\n          }}\n        />\n        //line Chart\n        // <ApexChart\n        //   type=\"line\"\n        //   series={[\n        //     {\n        //       name: \"Price\",\n        //       data: data!.map((price) => price.close),\n        //     },\n        //   ]}\n        //   options={{\n        //     theme: {\n        //       mode: \"dark\",\n        //     },\n        //     chart: {\n        //       height: 300,\n        //       width: 500,\n        //       toolbar: {\n        //         show: false,\n        //       },\n        //       background: \"transparent\",\n        //     },\n        //     grid: { show: false },\n        //     stroke: {\n        //       curve: \"smooth\",\n        //       width: 4,\n        //     },\n        //     yaxis: {\n        //       show: false,\n        //     },\n        //     xaxis: {\n        //       axisBorder: { show: false },\n        //       axisTicks: { show: false },\n        //       labels: { show: false },\n        //       type: \"datetime\",\n        //       categories: data!.map((price) => price.time_close),\n        //     },\n        //     fill: {\n        //       type: \"gradient\",\n        //       gradient: { gradientToColors: [\"blue\"], stops: [0, 100] },\n        //     },\n        //     colors: [\"red\"],\n        //     tooltip: {\n        //       y: {\n        //         formatter: (value) => `$ ${value}`,\n        //       },\n        //     },\n        //   }}\n        // />\n      )}\n    </div>\n  );\n}\n\nfunction Price() {\n  const { coinId } = useOutletContext<CharProps>();\n  const { isLoading, data } = useQuery<IDate[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n  const [priceInfo, setPriceInfo] = useState<PriceData>();\n  useEffect(() => {\n    (async () => {\n      const priceData = await (\n        await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)\n      ).json();\n      setPriceInfo(priceData);\n    })();\n  }, []);\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading Price...\"\n      ) : (\n        <>\n          <PriceDetailUl>\n            <PriceDetailLi>\n              <BsCoin size={\"20\"} color={\"#ffcb00\"} />\n              All Time High Price : ${\" \"}\n              {priceInfo ? priceInfo.quotes.USD.ath_price.toFixed(3) : null}\n            </PriceDetailLi>\n            <PriceDetailLi>\n              <BsCoin size={\"20\"} color={\"#ffcb00\"} />\n              Market Cap : ${\" \"}\n              {priceInfo ? priceInfo.quotes.USD.market_cap : null}\n            </PriceDetailLi>\n            <PriceDetailLi>\n              <BsCoin size={\"20\"} color={\"#ffcb00\"} />\n              Percent from ATH Price :{\" \"}\n              {priceInfo ? priceInfo.quotes.USD.percent_from_price_ath : null} %\n            </PriceDetailLi>\n            <PriceDetailLi>\n              <BsCoin size={\"20\"} color={\"#ffcb00\"} />\n              Volume(24h) :{\" \"}\n              {priceInfo ? priceInfo.quotes.USD.volume_24h.toFixed(3) : null}\n            </PriceDetailLi>\n          </PriceDetailUl>\n        </>\n      )}\n    </div>\n  );\n}\nexport default Router;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#1C1A27\",\n  textColor: \"#222\",\n  accentColor: \"#D50022\",\n  desColor: \"#FCE2DB\",\n  tabColor: \"#fff\",\n};\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"#fff\",\n  textColor: \"#222\",\n  accentColor: \"#D50022\",\n  desColor: \"#BFA5A3\",\n  tabColor: \"#FCE2DB\",\n};\n","import Router from \"./Router\";\nimport React from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { ReactQueryDevtools } from \"@tanstack/react-query-devtools\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport { ThemeProvider } from \"styled-components\";\nimport { useRecoilValue } from \"recoil\";\nimport { atom } from \"recoil\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\n  html, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: ${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n}\n* {\n  box-sizing: border-box;\n}\na {\n  text-decoration: none;\n  color: inherit;\n}\n`;\n\nexport const isLightAtom = atom({\n  key: \"isLight\",\n  default: false,\n});\n\nfunction App() {\n  const toggle = useRecoilValue(isLightAtom);\n  return (\n    <>\n      <ThemeProvider theme={toggle ? lightTheme : darkTheme}>\n        <GlobalStyle />\n        <Router />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { RecoilRoot } from \"recoil\";\nimport {\n  QueryClient,\n  QueryClientProvider,\n  useQuery,\n} from \"@tanstack/react-query\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}